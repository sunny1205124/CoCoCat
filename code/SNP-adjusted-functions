# The performance of selecting causal SNPs in GWAS - Linear and logistic regression model
# functions for use
# Filename: SNP-adjusted-ld-functions-v0421.R
# Author: Sunny
# Date: 2020/04/21
##
##### select data for regression ####
f0 <- function(X0){
  sum(X0)>=1
}

### maf ###
maf <- function(x0){
  MAF <- (2*sum(x0==2)+sum(x0==1))/(2*length(x0))
  return(MAF)
}

#### Data generation
DataGeneration <- function(data,beta,num_causal,causal_snp,pb,family){
  b0 <- rep(beta,n_causal)
  value_snp <- as.matrix(data[,causal_snp])
  if(family=='gaussian'){
    Y <- value_snp %*% b0 + rnorm(N)
  }else{
    GY <- value_snp %*% b0 + log(pb/(1-pb))
    pY <- exp(GY)/(1+exp(GY))
    Y <- rbinom(N,1,pY)
  }
  return(Y)
}

#### FDR #####
fdr <- function(nt,nc){
  if(nt>0){
    if(nc>=1){
      FDR <- (nt-nc)/nt
    }else{ 
      FDR <- 1
    }
  }else{
    FDR <- 0
  }
  return(FDR)
}

#### TDR ####
tdr <- function(nc){
  TDR <- nc/n_causal
  return(TDR)
}

#### MCC ####
mcc <- function(nall,nt,nc){
  TP <- nc
  TN <- nall-nt-n_causal+nc
  FP <- nt-nc
  FN <- n_causal-nc
  if((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN)!=0){
    MCC <- (TP*TN-FP*FN)/((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))^(1/2)
  }  else{
    MCC <- 0
  }
  return(MCC)
}

#### regression model
regression <- function(m_time, data_m, fmly, p_value){
  del_causal <- NULL
  name_causal <- colnames(data_m)[1:(ncol(data_m)-1)]
  idx_m <- combn(length(name_causal),m_time)
  if(length(name_causal)-m_time>0){
    for (cc in 1:(length(name_causal)-m_time)) {
      idx_m[,idx_m[1,]==cc] <- idx_m[,idx_m[1,]==cc][,order(idx_m[m_time,idx_m[1,]==cc],decreasing = TRUE)]
    }
  }else{
    idx_m <- idx_m
  }
  for (aa in 1:ncol(idx_m)) {
    mul_snp <- name_causal[idx_m[,aa]]
    if(sum(mul_snp %in% del_causal)>0) next
    forml <- paste0('outcome_y~',paste(mul_snp,collapse = '+'))
    fit0 <- glm(as.formula(forml),data_m,family = fmly)
    res <- summary(fit0)$coef[-1,]
    if(sum(is.na(fit0$coefficients))>=(m_time-1)){
      del_causal <- del_causal
    }else if(sum(res[,4]>p_value,na.rm = T)==nrow(res)){
      del_causal <- del_causal
    }else{
      del_causal <- c(del_causal,names(which(res[,4]>p_value)))
    }
  }
  return(del_causal)
}

#### the main function ####
simulation <- function(data_s,fmly){
  coef1 <- rep(NA,n_snp)
  p1 <- rep(NA,n_snp)
  
  data_s <- as.data.frame(data_s)
  outcome_y <- data_s$Y
  ##### univariable regression model
  starttime_uni <- proc.time()
  for (m in 1:n_snp) {
    uni_snp <- data_s[,m]
    fit1 <- glm(outcome_y~uni_snp, family=fmly)
    if(!is.na((fit1)$coef[2])){
      coef1[m] <- summary(fit1)$coef[2,1]
      p1[m] <- summary(fit1)$coef[2,4]
    }else{
      coef1[m] <- NA
      p1[m] <- NA
    }
  }
  data_s0 <- data_s[,1:n_snp][,!is.na(p1)]
  data_s1 <- data_s0[,p1[!is.na(p1)]<p_value1]
  p1_1 <- p1[!is.na(p1)][p1[!is.na(p1)]<p_value1]
  if(sum(p1[!is.na(p1)]<p_value1)>1){
    if(sum(p1[!is.na(p1)]<p_value1)>3){
      order_p <- order(p1_1)
      data_s2 <- data_s1[,order_p]
      
      data_s2_1 <- data_s2[,seq(1,ncol(data_s2),2)]
      data_s2_2 <- data_s2[,seq(2,ncol(data_s2),2)]
      
      name_snp_1 <- colnames(data_s2_1)
      name_snp_2 <- colnames(data_s2_2)
      name_snp <- c(name_snp_1,name_snp_2)
    }else{
      order_p <- order(p1_1)
      data_s2 <- data_s1[,order_p]
      name_snp <- colnames(data_s2)
    }
  }else{
    name_snp <- colnames(data_s0)[p1[!is.na(p1)]<p_value1]
  }
  nt_uni <- length(name_snp)
  nc_uni <- sum(c_snp %in% name_snp)
  name_snp1 <- colnames(data_s0)[p1[!is.na(p1)]<p_value2]
  nt_uni_1 <- length(name_snp1)
  nc_uni_1 <- sum(c_snp %in% name_snp1)
  endtime_uni <- proc.time()
  time_uni <- as.numeric(endtime_uni - starttime_uni)
  ######### multivariable regression model
  if (nt_uni>1){
    ##### separate regression model
    starttime_s <- proc.time()
    if(nt_uni>3){
      m_time0_1=2
      data_s3_1 <- data.frame(data_s2_1,outcome_y)
      name_snp2_1 <- c(name_snp_1,'outcome_y')
      del_snp_1 <- name_snp2_1
      while (length(name_snp2_1)>m_time0_1 & length(del_snp_1)!=0){
        cat(m_time0_1,'\n')
        del_snp_1 <- regression(m_time=m_time0_1, data_m=data_s3_1, fmly=fmly, p_value=p_value1)
        name_snp2_1 <- name_snp2_1[!name_snp2_1 %in% del_snp_1]
        data_s3_1 <- data_s3_1[,name_snp2_1]
        if(m_time0_1==2){
          name_snp4_1 <- name_snp2_1[1:(length(name_snp2_1)-1)]
        }
        m_time0_1=m_time0_1+1
      }
      m_time0_2=2
      data_s3_2 <- data.frame(data_s2_2,outcome_y)
      name_snp2_2 <- c(name_snp_2,'outcome_y')
      del_snp_2 <- name_snp2_2
      while (length(name_snp2_2)>m_time0_2 & length(del_snp_2)!=0){
        cat(m_time0_2,'\n')
        del_snp_2 <- regression(m_time=m_time0_2, data_m=data_s3_2, fmly=fmly, p_value=p_value1)
        name_snp2_2 <- name_snp2_2[!name_snp2_2 %in% del_snp_2]
        data_s3_2 <- data_s3_2[,name_snp2_2]
        if(m_time0_2==2){
          name_snp4_2 <- name_snp2_2[1:(length(name_snp2_2)-1)]
        }
        m_time0_2=m_time0_2+1
      }
      name_snp40 <- c(name_snp4_1,name_snp4_2)
      name_snp3_1 <- name_snp2_1[1:(length(name_snp2_1)-1)]
      name_snp3_2 <- name_snp2_2[1:(length(name_snp2_2)-1)]
      name_snp30 <- c(name_snp3_1,name_snp3_2)
      m_time00 <- max(m_time0_1,m_time0_2)
      
      if(length(name_snp30)>1){
        m_time1=2
        data_s30 <- data.frame(data_s1[,name_snp30],outcome_y)
        name_snp20 <- c(name_snp30,'outcome_y')
        del_snp0 <- regression(m_time=m_time1, data_m=data_s30, fmly=fmly, p_value=p_value1)
        name_snp20 <- name_snp20[!name_snp20 %in% del_snp0]
        data_s30 <- data_s30[,name_snp20]
        if(m_time1==2){
          name_snp4 <- name_snp20[1:(length(name_snp20)-1)]
        }
        m_time1=m_time1+1
        del_snp0 <- name_snp20
        while (length(name_snp20)>m_time1 & length(del_snp0)!=0){
          cat(m_time1,'\n')
          del_snp0 <- regression(m_time=m_time1, data_m=data_s30, fmly=fmly, p_value=p_value1)
          name_snp20 <- name_snp20[!name_snp20 %in% del_snp0]
          data_s30 <- data_s30[,name_snp20]
          m_time1=m_time1+1
        }
        name_snp3 <- name_snp20[1:(length(name_snp20)-1)]
      }else{
        name_snp4 <- name_snp40
        name_snp3 <- name_snp30
        m_time1=2
      }
      m_time0=max(m_time00,m_time1)
    }else{
      m_time0=2
      data_s3 <- data.frame(data_s2,outcome_y)
      name_snp2 <- c(name_snp,'outcome_y')
      del_snp <- name_snp2
      while (length(name_snp2)>m_time0 & length(del_snp)!=0){
        cat(m_time0,'\n')
        del_snp <- regression(m_time=m_time0, data_m=data_s3, fmly=fmly, p_value=p_value1)
        name_snp2 <- name_snp2[!name_snp2 %in% del_snp]
        data_s3 <- data_s3[,name_snp2]
        if(m_time0==2){
          name_snp4 <- name_snp2[1:(length(name_snp2)-1)]
        }
        m_time0=m_time0+1
      }
      name_snp3 <- name_snp2[1:(length(name_snp2)-1)]
    }
    nt_mul2 <- length(name_snp4)
    nc_mul2 <- sum(c_snp %in% name_snp4)
    nt_mul <- length(name_snp3)
    nc_mul <- sum(c_snp %in% name_snp3)
    m_time <- m_time0-1
    endtime_s <- proc.time()
    #### combined regression
    starttime_c <- proc.time()
    m_time_c=2
    data_s3_c <- data.frame(data_s2,outcome_y)
    name_snp2_c <- c(name_snp,'outcome_y')
    del_snp_c <- name_snp2_c
    while (length(name_snp2_c)>m_time_c & length(del_snp_c)!=0){
      cat(m_time_c,'\n')
      del_snp_c <- regression(m_time=m_time_c, data_m=data_s3_c, fmly=fmly, p_value=p_value1)
      name_snp2_c <- name_snp2_c[!name_snp2_c %in% del_snp_c]
      data_s3_c <- data_s3_c[,name_snp2_c]
      if(m_time_c==2){
        name_snp4_c <- name_snp2_c[1:(length(name_snp2_c)-1)]
        nt_mul2_c <- length(name_snp4_c)
        nc_mul2_c <- sum(c_snp %in% name_snp4_c)
      }
      m_time_c=m_time_c+1
    }
    name_snp3_c <- name_snp2_c[1:(length(name_snp2_c)-1)]
    nt_mul_c <- length(name_snp3_c)
    nc_mul_c <- sum(c_snp %in% name_snp3_c)
    m_time_c <- m_time_c-1
    endtime_c <- proc.time()
  }else{
    time_s <- 0
    time_c <- 0
    # time_both <- 0
    # time_back <- 0
    # time_for <- 0
    nt_mul2=nt_uni
    nc_mul2=nc_uni
    nt_mul=nt_uni
    nc_mul=nc_uni
    nt_mul2_c=nt_uni
    nc_mul2_c=nc_uni
    nt_mul_c=nt_uni
    nc_mul_c=nc_uni
    m_time=1
    m_time_c=1
  }
  
  ### FDR TDR MCC
  FDR_uni <- fdr(nt=nt_uni,nc=nc_uni)
  FDR_uni_1 <- fdr(nt=nt_uni_1,nc=nc_uni_1)
  FDR_mul2 <- fdr(nt=nt_mul2,nc=nc_mul2)
  FDR_mul <- fdr(nt=nt_mul,nc=nc_mul)
  FDR_mul2_c <- fdr(nt=nt_mul2_c,nc=nc_mul2_c)
  FDR_mul_c <- fdr(nt=nt_mul_c,nc=nc_mul_c)
  TDR_uni <- tdr(nc=nc_uni)
  TDR_uni_1 <- tdr(nc=nc_uni_1)
  TDR_mul2_c <- tdr(nc=nc_mul2_c)
  TDR_mul_c <- tdr(nc=nc_mul_c)
  TDR_mul2 <- tdr(nc=nc_mul2)
  TDR_mul <- tdr(nc=nc_mul)
  MCC_uni <- mcc(nall=nnt,nt=nt_uni,nc=nc_uni)
  MCC_uni_1 <- mcc(nall=nnt,nt=nt_uni_1,nc=nc_uni_1)
  MCC_mul2 <- mcc(nall=nnt,nt=nt_mul2,nc=nc_mul2)
  MCC_mul <- mcc(nall=nnt,nt=nt_mul,nc=nc_mul)
  MCC_mul2_c <- mcc(nall=nnt,nt=nt_mul2_c,nc=nc_mul2_c)
  MCC_mul_c <- mcc(nall=nnt,nt=nt_mul_c,nc=nc_mul_c)
  result <- c(nt_uni,nc_uni,nt_uni_1,nc_uni_1,nt_mul2,nc_mul2,nt_mul,nc_mul,nt_mul2_c,nc_mul2_c,nt_mul_c,nc_mul_c,
              FDR_uni,FDR_uni_1,FDR_mul2,FDR_mul,FDR_mul2_c,FDR_mul_c,TDR_uni,TDR_uni_1,TDR_mul2,TDR_mul,TDR_mul2_c,TDR_mul_c,
              MCC_uni,MCC_uni_1,MCC_mul2,MCC_mul,MCC_mul2_c,MCC_mul_c,m_time,m_time_c,
              time_uni,time_s,time_c,N1,bb)
  
  names(result) <-  c('nt_uni','nc_uni','nt_uni_1','nc_uni_1','nt_mul2','nc_mul2','nt_mul','nc_mul','nt_mul2_c','nc_mul2_c','nt_mul_c','nc_mul_c',
                      'FDR_uni','FDR_uni_1','FDR_mul2','FDR_mul','FDR_mul2_c','FDR_mul_c','TDR_uni','TDR_uni_1','TDR_mul2','TDR_mul','TDR_mul2_c','TDR_mul_c',
                      'MCC_uni','MCC_uni_1','MCC_mul2','MCC_mul','MCC_mul2_c','MCC_mul_c','m_time','m_time_c',
                      'time_uni','time_s','time_c','N1','beta')
  
  return(result)
}
