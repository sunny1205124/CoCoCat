###### Fine-mapping of BMI in UK Biobank
library(compiler)
enableJIT(1)

library(rbgen)
library(data.table)
library(MASS)
library(doSNOW)
library(doRNG)
library(parallel)

RNGkind("L'Ecuyer-CMRG")

cl.cores <- 50
cl <- makeCluster(cl.cores)
registerDoSNOW(cl)
getDoParWorkers()

options(stringsAsFactors = F)

#### functions
dosage2snp <- function(snp1){
  if(length(dim(snp1))>2){
    colnames(snp1) <- idx
    snp_BMI <- snp1[,!is.na(smp1$BMI),]
    
    n_dim <- dim(snp_BMI)
    cat(chr,'--',n_dim,'\n')
    snp_e0 <- matrix(NA, n_dim[2], n_dim[1])
    for (r in 1:n_dim[1]) {
      for (k in 1:n_dim[2]){
        snp_e0[k,r] <- 2*sum(snp_BMI[r,k,'g=2'])+sum(snp_BMI[r,k,'g=1'])
      }
    }
  }else{
    snp_BMI <- snp1[!is.na(smp1$BMI),]
    
    n_dim <- dim(snp_BMI)
    cat(chr,'--',n_dim,'\n')
    snp_e0 <- matrix(NA, n_dim[1], 1)
    for (r in 1) {
      for (k in 1:n_dim[1]){
        snp_e0[k,r] <- 2*sum(snp_BMI[k,'g=2'])+sum(snp_BMI[k,'g=1'])
      }
    }
  }
  return(snp_e0)
}

transfer_cut <- function(rs){
  rsid0 <- rsid[(cuts*(rs-1)+1):(cuts*rs)]
  rsid2 <- unique(rsid0)
  vrt00 <- vrt0[(cuts*(rs-1)+1):(cuts*rs),]
  data1 = bgen.load(filename, rsids = rsid2)
  vrt <- data1$variants
  vrt$index <- 1:nrow(vrt)
  vrt1 <- merge(vrt00, vrt, by=colnames(vrt0), all.x = T, sort = F)
  snp1 <- data1$data[vrt1$index, , ]
  cat(dim(snp1),'\n')
  rm(data1)
  
  snp_e <- dosage2snp(snp1)
  snp_e <- data.frame(snp_e)
  colnames(snp_e) <- result_snptest$index[(cuts*(rs-1)+1):(cuts*rs)]
  return(snp_e)
}


transfer <- function(chr){
  result_snptest <- uni_result[uni_result$chromosome==chr,]
  result_snptest1 <- result_snptest[order(result_snptest$frequentist_add_pvalue),]
  order_p <- order(result_snptest$frequentist_add_pvalue)
  rsid <- result_snptest$rsid
  rsid1 <- unique(result_snptest$rsid)
  allele0 <- result_snptest$alleleA
  allele1 <- result_snptest$alleleB
  pos0 <- result_snptest$position
  vrt0 <-data.frame(rsid, allele0, allele1)
  
  rs0 <- ceiling(length(rsid)/cuts)
  
  filename <- paste0("BMI_uni_SNP/ukb_BMI_chr",chr,".bgen")
  rsid0 <- rsid[(cuts*(rs0-1)+1):length(rsid)]
  rsid2 <- unique(rsid0)
  vrt00 <- vrt0[(cuts*(rs0-1)+1):length(rsid),]
  data1 = bgen.load(filename, rsids = rsid2)
  vrt <- data1$variants
  vrt$index <- 1:nrow(vrt)
  vrt1 <- merge(vrt00, vrt, by=colnames(vrt0), all.x = T, sort = F)
  snp1 <- data1$data[vrt1$index, , ]
  cat(chr,'--',dim(snp1),'\n')
  rm(data1)
  
  snp_e0 <- dosage2snp(snp1)
  snp_e0 <- data.frame(snp_e0)
  colnames(snp_e0) <- result_snptest$index[(cuts*(rs0-1)+1):length(rsid)]
  
  num_cut <- as.list(1:(rs0-1))
  res <- foreach(i = num_cut, .packages= c("rbgen", "data.table", "MASS")) %dopar% {
    transfer_cut(rs=i)
  }
  for(rs in (rs0-1):1){
    snp_e <- data.frame(res[[rs]])
    snp_e0 <- cbind(snp_e,snp_e0)
  }
  
  snp_e0$ID_1 <- smp1$ID_1[!is.na(smp1$BMI)]
  
  snp_e1 <- merge(snp_e0, smp1, all.x = T, sort = F)
  snp_e2 <- snp_e1[,c(result_snptest$index[order_p], "BMI")]
  fnm <- paste0("BMI_uni_SNP/ukb_BMI_chr",chr,"-exp.Rdata")
  #write.csv(snp_e2,fnm,row.names = F,quote = F)
  save(snp_e2, file = fnm)
}

#### regression model
regression <- function(m_time, data_m, fmly, p_value){
  del_causal <- NULL
  name_causal <- colnames(data_m)[1:(ncol(data_m)-1)]
  idx_m <- combn(length(name_causal),m_time)
  if(length(name_causal)-m_time>0){
    for (cc in 1:(length(name_causal)-m_time)) {
      idx_m[,idx_m[1,]==cc] <- idx_m[,idx_m[1,]==cc][,order(idx_m[m_time,idx_m[1,]==cc],decreasing = TRUE)]
    }
  }else{
    idx_m <- idx_m
  }
  for (aa in 1:ncol(idx_m)) {
    mul_snp <- name_causal[idx_m[,aa]]
    if(sum(mul_snp %in% del_causal)>0) next
    forml <- paste0('BMI~',paste(mul_snp,collapse = '+'))
    fit0 <- glm(as.formula(forml),data_m,family = fmly)
    res <- summary(fit0)$coef[-1,]
    if(sum(is.na(fit0$coefficients))>=(m_time-1)){
      del_causal <- del_causal
    }else if(sum(res[,4]>p_value,na.rm = T)==nrow(res)){
      del_causal <- del_causal
    }else{
      del_causal <- c(del_causal,names(which(res[,4]>p_value)))
    }
  }
  return(del_causal)
}

regression_cgwas <- function(name_snps,m_times,snp_e0){
  if (length(name_snps)>2){
    del_snp <- name_snps
    while (length(name_snps)>m_times & length(del_snp)!=0){
      cat(m_times,'\n')
      del_snp <- regression(m_time=m_times, data_m=snp_e0, fmly=gaussian, p_value=0.05)
      name_snps <- name_snps[!name_snps %in% del_snp]
      snp_e0 <- snp_e0[,name_snps]
      m_times=m_times+1
    }
    name_snp_s <- name_snps[1:(length(name_snps)-1)]
    m_time <- m_times-1
  }else{
    name_snp_s <- name_snps[1:(length(name_snps)-1)]
    m_time <- m_times-1
  }
  return(name_snp_s)
}

CGWAS_cut <- function(rs, rs0, snp_e2){
  snp_e3 <- snp_e2[,c(seq(rs,(ncol(snp_e2)-1),rs0),ncol(snp_e2))]
  m_time0=2
  name_snp2 <- colnames(snp_e3)
  name_snp3 <- regression_cgwas(name_snps=name_snp2,m_times=m_time0,snp_e0=snp_e3)
  return(name_snp3)
}

CGWAS <- function(chr){
  fnm <- paste0("BMI_uni_SNP/ukb_BMI_chr",chr,"-exp.Rdata")
  load(fnm)
  snp_e2 <- as.data.frame(snp_e2)
  snp_e2$BMI <- as.numeric(snp_e2$BMI)
  dim(snp_e2)
  
  rs0 <- ceiling((ncol(snp_e2)-1)/cuts)
  
  num_cut1 <- as.list(1:rs0)
  res_CGWAS <- foreach(i = num_cut1, .packages= c("rbgen", "data.table", "MASS")) %dopar% {
    CGWAS_cut(rs=i,snp_e2=snp_e2)
  }
  name_snp4 <- unlist(res_CGWAS)
  
  m_time1=2
  name_snp5 <- c(name_snp4,'BMI')
  snp_e4 <- snp_e2[,name_snp5]
  name_snp6 <- regression_cgwas(name_snps=name_snp5,m_times=m_time1,snp_e0=snp_e4)
  res <- cbind(uni_result[uni_result$index %in% name_snp6, 2:3], chr)
  colnames(res) <- c('causal_snp_ids','causal_snp_rsid','chr')
  res1 <- merge(res,inital,by='chr',all.x = T,sort = F)
  final <- data.frame(table(res$chr))
  colnames(final) <- c('chr', 'final snps')
  final$chr <- as.numeric(as.character(final$chr))
  res2 <- merge(res1,final,by='chr',all.x = T,sort = F)
  res3 <- res2[,c('causal_snp_ids','causal_snp_rsid','chr','inital snps','final snps')]
  
  fn <- paste0("BMI_uni_SNP/causal_snps/ukb_BMI_chr",chr,".snp")
  write.csv(res3,fn,row.names = F,quote = F)
}
